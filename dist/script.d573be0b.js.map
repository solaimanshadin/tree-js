{"version":3,"sources":["../node_modules/three/build/three.module.js","js/script.js","../../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","constructor","Float32Array","Uint16Array","Uint8Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","Object","freeze","__proto__","Vector2","prototype","isVector2","scalar","v","multiplyScalar","e","elements","minVal","maxVal","divideScalar","sqrt","angle","atan2","distanceToSquared","dx","dy","alpha","v1","v2","offset","attribute","getX","getY","center","Symbol","iterator","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","premultiply","_m3","makeScale","theta","makeRotation","makeTranslation","matrix","fromArray","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","getTypedArray","buffer","createElementNS","name","document","SRGBToLinear","LinearToSRGB","FN","ColorManagement","legacyMode","workingColorSpace","colorSpace","convert","color","sourceColorSpace","targetColorSpace","fn","fromWorkingColorSpace","toWorkingColorSpace","_colorKeywords","_rgb$1","_hslA","_hslB","hue2rgb","p","toComponents","source","Color","isColor","setRGB","copy","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","size","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","toString","hue","saturation","lightness","delta","getHSL","color1","color2","getZ","NAMES","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","Source","isSource","version","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","from","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","encoding","isTexture","defineProperty","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","setUvTransform","JSON","parse","stringify","needsUpdate","textures","metadata","generator","toJSON","wrap","dispatchEvent","uv","applyMatrix3","Vector4","z","w","isVector4","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","WebGLRenderTarget","options","isWebGLRenderTarget","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","dispose","clone","assign","DataArrayTexture","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","count","isWebGLMultipleRenderTargets","il","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","u1","sqrt1u1","sqrtu1","u2","u3","callback","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","Vector3","isVector3","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","u","Box3","Infinity","isBox3","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","halfSize","_vector$b","add","object","precise","expandByObject","box","isEmpty","addVectors","subVectors","point","vector","addScalar","updateWorldMatrix","geometry","attributes","position","fromBufferAttribute","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","addScaledVector","setLength","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","isMatrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","_matrix$1","_quaternion$3","Euler","DefaultOrder","isEuler","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","error","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","isObject3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","matrixWorldAutoUpdate","DefaultMatrixWorldAutoUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","updateMatrix","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","arguments","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","toArray","isInstancedMesh","instanceMatrix","instanceColor","serialize","library","element","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBeforeCompile","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","isMeshBasicMaterial","setValues","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRange","index1","index2","setXY","setXYZ","applyNormalMatrix","onUploadCallback","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","jl","indices","positions","normals","uvs","nVertices","hasAttribute","tangents","getAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputEncoding","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","CubeCamera","renderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","scene","currentRenderTarget","currentToneMapping","toneMapping","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","isPlane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","iridescenceThicknessMinimum","iridescenceThicknessMaximum","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","enableAll","unshift","getRGB","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","makeOrthographic","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapMaterial","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","fromEquirectangular","fromCubemap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","Set","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","getVertexShaderID","getFragmentShaderID","useAlphaTest","useClearcoat","useIridescence","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","disableAll","enable","acquireProgram","pl","preexistingProgram","releaseProgram","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","disable","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearEncoding","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","pixelStorei","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","sRGBToLinear","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","isArrayCamera","cameras","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","hand","inputjoint","_getHandJoint","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","planesLastChangedTimes","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","removed","added","connect","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","getPlanes","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","planesToRemove","lastChangedTime","lastKnownTime","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","bindBufferBase","__cache","hasUniformChanged","__offset","__data","cachedObject","chunkSize","chunkOffset","getUniformSize","storage","remainingSizeInChunk","boundary","createCanvasElement","display","WebGLRenderer","isWebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","forEach","setProgram","rangeFactor","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","maxInstanceCount","prepare","getProgram","material2","self","setFromProjectionMatrix","projectObject","camera2","renderScene","onAfterRender","isLOD","intersectsSprite","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","seqWithValue","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","setOptional","boneTexture","computeBoneTexture","boneTextureSize","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","upload","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","hysteresis","levelDistance","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","getComponent","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_identity","_mesh","InstancedMesh","setMatrixAt","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CompressedArrayTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","getPointAt","lengths","getLengths","cacheArcLengths","current","last","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","segments","closed","binormals","vec","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","concat","absarc","absellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","holesPts","getPointsHoles","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","RawShaderMaterial","_sheen","_clearcoat","_iridescence","_transmission","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","HttpError","response","FileLoader","setTimeout","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","catch","finally","AnimationLoader","setPath","setRequestHeader","setWithCredentials","CompressedTextureLoader","setResponseType","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coeff","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","materialLib","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","loadAsync","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","setTextures","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","fetchOptions","res","colorSpaceConversion","imageBitmap","AudioContext","window","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","isHemisphereLightProbe","sky","ground","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","targetObject","resolvedProperty","propertyIndex","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","substring","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","action","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","UniformsGroup","isUniformsGroup","uniformsSource","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","_tables","_generateTables","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","BoxBufferGeometry","CapsuleBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","revision","__THREE__","THREE","innerWidth","innerHeight","appendChild","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"script.d573be0b.js","sourceRoot":"../src","sourcesContent":["/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '147';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022; // @deprecated since r137\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, x,\n\t\t\t0, 1, y,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb$1 = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\treturn clamp( _rgb$1.r * 255, 0, 255 ) << 16 ^ clamp( _rgb$1.g * 255, 0, 255 ) << 8 ^ clamp( _rgb$1.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\tconst r = _rgb$1.r, g = _rgb$1.g, b = _rgb$1.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\ttarget.r = _rgb$1.r;\n\t\ttarget.g = _rgb$1.g;\n\t\ttarget.b = _rgb$1.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb$1 ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb$1.r } ${ _rgb$1.g } ${ _rgb$1.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb$1.r * 255 ) | 0},${( _rgb$1.g * 255 ) | 0},${( _rgb$1.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DefaultMatrixWorldAutoUpdate; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.DefaultMatrixWorldAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, 1, 0 );\n\t\tcameraPX.lookAt( 1, 0, 0 );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, 1, 0 );\n\t\tcameraNX.lookAt( - 1, 0, 0 );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\tcameraPY.lookAt( 0, 1, 0 );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, 1 );\n\t\tcameraNY.lookAt( 0, - 1, 0 );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\tcameraPZ.lookAt( 0, 0, 1 );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === 3553 || ( textureTarget >= 34069 && textureTarget <= 34074 ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\n\t\t// @deprecated since r137\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return 6403;\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst planes = new Set();\n\t\tconst planesLastChangedTimes = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPlanes = function () {\n\n\t\t\treturn planes;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame.detectedPlanes } );\n\n\t\t\t\tlet planesToRemove = null;\n\n\t\t\t\tfor ( const plane of planes ) {\n\n\t\t\t\t\tif ( ! frame.detectedPlanes.has( plane ) ) {\n\n\t\t\t\t\t\tif ( planesToRemove === null ) {\n\n\t\t\t\t\t\t\tplanesToRemove = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplanesToRemove.push( plane );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( planesToRemove !== null ) {\n\n\t\t\t\t\tfor ( const plane of planesToRemove ) {\n\n\t\t\t\t\t\tplanes.delete( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.delete( plane );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeremoved', data: plane } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const plane of frame.detectedPlanes ) {\n\n\t\t\t\t\tif ( ! planes.has( plane ) ) {\n\n\t\t\t\t\t\tplanes.add( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.set( plane, frame.lastChangedTime );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeadded', data: plane } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst lastKnownTime = planesLastChangedTimes.get( plane );\n\n\t\t\t\t\t\tif ( plane.lastChangedTime > lastKnownTime ) {\n\n\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, plane.lastChangedTime );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planechanged', data: plane } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst value = uniform.value;\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\t\t\tconst info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tconst value = uniform.value;\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\t//\n\n\t\tconst drawRange = geometry.drawRange;\n\t\tconst position = geometry.attributes.position;\n\n\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\tif ( group !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t}\n\n\t\tconst drawCount = drawEnd - drawStart;\n\n\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t//\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nvar AnimationUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n});\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nvar DataUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat\n});\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleBufferGeometry, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, SRGBColorSpace, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\n","import * as THREE from 'three'\n\nconst renderer = new THREE.WebGLRenderer()\n\nrenderer.setSize(window.innerWidth, window.innerHeight)\n\ndocument.body.appendChild(renderer.domElement)","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}